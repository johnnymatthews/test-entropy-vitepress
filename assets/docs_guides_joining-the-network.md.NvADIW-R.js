import{_ as e,c as o,o as t,a3 as i}from"./chunks/framework.7ep0oyv4.js";const n="/assets/joining-the-network-sequence-diagram.BAkHCLn5.svg",f=JSON.parse('{"title":"Joining The Network","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guides/joining-the-network.md","filePath":"docs/guides/joining-the-network.md"}'),a={name:"docs/guides/joining-the-network.md"},r=i('<h1 id="joining-the-network" tabindex="-1">Joining The Network <a class="header-anchor" href="#joining-the-network" aria-label="Permalink to &quot;Joining The Network&quot;">​</a></h1><p>This describes the process by which a new validator node can join the network.</p><p><img src="'+n+'" alt="Joining The Network Flow"></p><ol><li>The new validator runs both an Entropy chain node and threshold server.</li><li>New validator registers with the chain, and the chain is assigns it to a signing &#39;subgroup&#39;.</li></ol><ol><li>Once a new validator knows which subgroup it has joined, it asks current validators in that group for a copy of the key shares which that group holds, by calling POST <code>validator/sync_kvdb</code> with database keys of the shares it needs.</li><li>Once all shares have been received, informs the chain that it has successfully synced.</li></ol><h2 id="information-needed-from-a-validator-to-join-the-network" tabindex="-1">Information needed from a Validator to join the network <a class="header-anchor" href="#information-needed-from-a-validator-to-join-the-network" aria-label="Permalink to &quot;Information needed from a Validator to join the network&quot;">​</a></h2><ul><li><code>Endpoint</code> - The IP address of it&#39;s threshold server</li><li><code>X25519PublicKey</code> - Its public encryption key for encrypting messages to and from other validators</li><li><code>Threshold Server Signing Account</code> - Account for the threshold server to submit transactions to the Entropy chain</li></ul>',7),s=[r];function h(d,c,l,g,u,_){return t(),o("div",null,s)}const k=e(a,[["render",h]]);export{f as __pageData,k as default};
